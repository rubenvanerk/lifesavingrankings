version: 2.1

executors:
  default:
    docker:
      - image: circleci/python:3.6.10-node
        environment:
          PIPENV_VENV_IN_PROJECT: true
    resource_class: small

jobs:
  build-and-test:
    executor: default
    steps:
      - checkout      
      - run:
          name: Install dependencies
          command: |
            sudo pip install pipenv
            pipenv install
      - run:
          name: Compile static files
          command: |            
            cd ~/project/lifesaving_rankings/static/
            npm install
            sudo npm install -g gulp
            gulp --production
      - run:
          name: Run tests
          command: pipenv run python ./manage.py test
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - .local
  deploy-production:
    executor: default
    steps:
      - attach_workspace:
          at: ~/
      - checkout
      - run:
          name: Update lambda function
          command: pipenv run zappa update production
      - run:
          name: Run database migrations
          command: pipenv run zappa manage production "migrate"
      - run:
          name: Deploy static files
          command: pipenv run zappa manage production "collectstatic --noinput"
  deploy-staging:
    executor: default
    steps:
      - attach_workspace:
          at: ~/
      - checkout
      - run:
          name: Update lambda function
          command: pipenv run zappa update staging
      - run:
          name: Run database migrations
          command: pipenv run zappa manage staging "migrate"
      - run:
          name: Deploy static files
          command: pipenv run zappa manage staging "collectstatic --noinput"
    
          
workflows:
  version: 2
  main:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
            branches:
              only: /master/
      - deploy-production:
          requires:
            - build-and-test
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-staging:
          requires:
            - build-and-test
          filters:
            branches:
              only: /master/
